{"ast":null,"code":"import _toConsumableArray from\"/Users/virinchyp/Downloads/progressbar-3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/virinchyp/Downloads/progressbar-3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/virinchyp/Downloads/progressbar-3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState}from\"react\";import axios from\"axios\";import Progress from\"./Progress\";var ProgressBar=function ProgressBar(){//Hooks to create Progress Bars, drop down , Buttons. \n//Each Hook expects two arguments . First is the variable , second is the event to change value of the variable. \nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),bars=_useState2[0],setbars=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),buttons=_useState4[0],setbuttons=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),selectedBar=_useState6[0],setselectedBar=_useState6[1];var _useState7=useState(100),_useState8=_slicedToArray(_useState7,2),maxlimit=_useState8[0],setMaxLimit=_useState8[1];useEffect(function(){getbars();},[]);var handleChange=function handleChange(e){setselectedBar(e.target.value);};var getbars=function getbars(){axios.get(\"https://pb-api.herokuapp.com/bars\").then(function(res){var bars=[];res.data.bars.forEach(function(bar){var barObj={bar:bar,background:\"lightblue\",color:\"black\"};if(typeof bar===\"number\"){bars.push(barObj);}});if(bars){setbars(bars);}if(res.data.buttons){setbuttons(res.data.buttons);}if(res.data.limit){setMaxLimit(res.data.limit);}}).catch(function(error){alert(error);});};var handleBtnClick=function handleBtnClick(val){var newBar=_objectSpread({},bars[selectedBar]);newBar.bar=newBar.bar+val;if(newBar.bar>=maxlimit){newBar.background=\"red\";newBar.color=\"white\";}else{if(newBar.bar<=0){newBar.bar=0;}newBar.background=\"lightblue\";newBar.color=\"black\";}var allBars=_toConsumableArray(bars);allBars[selectedBar]=newBar;setbars(allBars);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-center\",\"data-testid\":\"heading\",children:\"Progress Bars Demo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row bars\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-sm\",children:[bars.length>0&&bars.map(function(bar,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[typeof bar.bar===\"number\"&&/*#__PURE__*/_jsx(Progress,{bar:bar}),typeof bar.bar!==\"number\"&&/*#__PURE__*/_jsx(\"div\",{children:\"Error Loading Progressbar .. Please Refresh and try again\"})]},i);}),bars.length===0&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading....\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row buttons\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:bars.length>0&&/*#__PURE__*/_jsx(\"select\",{name:\"bar\",value:selectedBar,onChange:function onChange(e){handleChange(e);},children:bars.map(function(bar,i){return/*#__PURE__*/_jsxs(\"option\",{value:i,className:\"option\",children:[\"Progress # \",i+1]},i);})})}),buttons.map(function(button,i){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"buttn\",onClick:function onClick(){handleBtnClick(button,i);},children:button})},i);})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col\"})]})]});};export default ProgressBar;","map":{"version":3,"sources":["/Users/virinchyp/Downloads/progressbar-3/src/ProgressBar.jsx"],"names":["React","useEffect","useState","axios","Progress","ProgressBar","bars","setbars","buttons","setbuttons","selectedBar","setselectedBar","maxlimit","setMaxLimit","getbars","handleChange","e","target","value","get","then","res","data","forEach","bar","barObj","background","color","push","limit","catch","error","alert","handleBtnClick","val","newBar","allBars","length","map","i","button"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Progress from \"./Progress\";\r\n\r\nconst ProgressBar = () => {\r\n //Hooks to create Progress Bars, drop down , Buttons. \r\n  //Each Hook expects two arguments . First is the variable , second is the event to change value of the variable. \r\n \r\n  const [bars, setbars] = useState([]);\r\n  const [buttons, setbuttons] = useState([]);\r\n  const [selectedBar, setselectedBar] = useState(0);\r\n  const [maxlimit, setMaxLimit] = useState(100);\r\n  useEffect(() => {\r\n    getbars();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setselectedBar(e.target.value);\r\n  };\r\n\r\n  const getbars = () => {\r\n    axios\r\n      .get(\"https://pb-api.herokuapp.com/bars\")\r\n      .then((res) => {\r\n        let bars = [];\r\n        res.data.bars.forEach((bar) => {\r\n          let barObj = { bar, background: \"lightblue\", color: \"black\" };\r\n          if (typeof bar === \"number\") {\r\n            bars.push(barObj);\r\n          }\r\n        });\r\n\r\n        if(bars){\r\n          setbars(bars);\r\n        }\r\n        if(res.data.buttons){\r\n          setbuttons(res.data.buttons);\r\n        }\r\n        if(res.data.limit){\r\n          setMaxLimit(res.data.limit);\r\n        }\r\n     \r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  };\r\n  const handleBtnClick = (val) => {\r\n    let newBar = { ...bars[selectedBar] };\r\n    newBar.bar = newBar.bar + val;\r\n    if (newBar.bar >= maxlimit) {\r\n      newBar.background = \"red\";\r\n      newBar.color = \"white\";\r\n    } else {\r\n      if (newBar.bar <= 0) {\r\n        newBar.bar = 0;\r\n      }\r\n      newBar.background = \"lightblue\";\r\n      newBar.color = \"black\";\r\n    }\r\n    let allBars = [...bars];\r\n    allBars[selectedBar] = newBar;\r\n    setbars(allBars);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"text-center\" data-testid=\"heading\">\r\n        Progress Bars Demo\r\n      </h3>\r\n      <div className=\"row bars\">\r\n        <div className=\"col-sm\"></div>\r\n        <div className=\"col-sm\">\r\n          {bars.length > 0 &&\r\n            bars.map((bar, i) => (\r\n              <div key={i} className=\"col\">\r\n                {typeof bar.bar === \"number\" && <Progress bar={bar} />}\r\n                {typeof bar.bar !== \"number\" && (\r\n                  <div>\r\n                    Error Loading Progressbar .. Please Refresh and try again\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          {bars.length === 0 && <div>Loading....</div>}\r\n          <div className=\"row buttons\">\r\n            <ul>\r\n              <li>\r\n                {bars.length > 0 && (\r\n                  <select\r\n                    name=\"bar\"\r\n                    value={selectedBar}\r\n                    onChange={(e) => {\r\n                      handleChange(e);\r\n                    }}\r\n                  >\r\n                    {bars.map((bar, i) => (\r\n                      <option key={i} value={i} className=\"option\">\r\n                        Progress # {i + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                )}\r\n              </li>\r\n              {buttons.map((button, i) => (\r\n                <li key={i}>\r\n                  <button\r\n                    className=\"buttn\"\r\n                    onClick={() => {\r\n                      handleBtnClick(button, i);\r\n                    }}\r\n                  >\r\n                    {button}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n"]},"metadata":{},"sourceType":"module"}